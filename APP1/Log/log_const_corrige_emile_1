programme        = ./perfWalshDCT 
environnement    = XDG_CONFIG_DIRS=/etc/xdg/xdg-cinnamon:/etc/xdg 
sizeof(int)      = 4
sizeof(long)     = 8
sizeof(double)   = 8

-----------------------------------------------------------------
faire_un_test----------------------------------------------------
-------------test du generateur aleatoire------------------------

Matrice   8 par   8 : 
Tableau D pseudo aleatoire PREMIER TIRAGE : 
          1,           2,           3,           4,           5,           6,           7,           8, 
          9,          10,          11,          12,          13,          14,          15,          16, 
         17,          18,          19,          20,          21,          22,          23,          24, 
         25,          26,          27,          28,          29,          30,          31,          32, 
         33,          34,          35,          36,          37,          38,          39,          40, 
         41,          42,          43,          44,          45,          46,          47,          48, 
         49,          50,          51,          52,          53,          54,          55,          56, 
         57,          58,          59,          60,          61,          62,          63,          64, 

Matrice   8 par   8 : 
Tableau D pseudo aleatoire SECOND TIRAGE : 
          1,           2,           3,           4,           5,           6,           7,           8, 
          9,          10,          11,          12,          13,          14,          15,          16, 
         17,          18,          19,          20,          21,          22,          23,          24, 
         25,          26,          27,          28,          29,          30,          31,          32, 
         33,          34,          35,          36,          37,          38,          39,          40, 
         41,          42,          43,          44,          45,          46,          47,          48, 
         49,          50,          51,          52,          53,          54,          55,          56, 
         57,          58,          59,          60,          61,          62,          63,          64, 

-----------------------------------------------------------------
faire_un_test--Walsh 2D------------------------------------------
-------------Coefficients Walsh 2D par wscoeff(x,y,r)------------
 1  1  1  1  1  1  1  1 
 1  1  1  1 -1 -1 -1 -1 
 1  1 -1 -1 -1 -1  1  1 
 1  1 -1 -1  1  1 -1 -1 
 1 -1 -1  1  1 -1 -1  1 
 1 -1 -1  1 -1  1  1 -1 
 1 -1  1 -1 -1  1 -1  1 
 1 -1  1 -1  1 -1  1 -1 

-----------------------------------------------------------------
faire_un_test--Walsh 2D------------------------------------------
-------------Donnees initiales-----------------------------------

Matrice   8 par   8 : 
Tableau D : 
          1,           2,           3,           4,           5,           6,           7,           8, 
          9,          10,          11,          12,          13,          14,          15,          16, 
         17,          18,          19,          20,          21,          22,          23,          24, 
         25,          26,          27,          28,          29,          30,          31,          32, 
         33,          34,          35,          36,          37,          38,          39,          40, 
         41,          42,          43,          44,          45,          46,          47,          48, 
         49,          50,          51,          52,          53,          54,          55,          56, 
         57,          58,          59,          60,          61,          62,          63,          64, 
Calcul transformee Walsh 2D ...

-----------------------------------------------------------------
faire_un_test--Walsh 2D------------------------------------------
-------------Transformee W calculee avec Fonction Walsh (decimal)

Matrice   8 par   8 : 
Transformee W calculee avec Fonction Walsh (decimal): 
       2080,        -128,            ,         -64,            ,            ,            ,         -32, 
      -1024,            ,            ,            ,            ,            ,            ,            , 
           ,            ,            ,            ,            ,            ,            ,            , 
       -512,            ,            ,            ,            ,            ,            ,            , 
           ,            ,            ,            ,            ,            ,            ,            , 
           ,            ,            ,            ,            ,            ,            ,            , 
           ,            ,            ,            ,            ,            ,            ,            , 
       -256,            ,            ,            ,            ,            ,            ,            , 

-----------------------------------------------------------------
faire_un_test--Walsh 2D------------------------------------------
-------------Transformee W calculee avec Fonction Walsh (hexadecimal)

Matrice   8 par   8 : 
Transformee W calculee avec Fonction Walsh (decimal): 
0x     820, 0xFFFFFF80, 0x        , 0xFFFFFFC0, 0x        , 0x        , 0x        , 0xFFFFFFE0, 
0xFFFFFC00, 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 
0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 
0xFFFFFE00, 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 
0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 
0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 
0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 
0xFFFFFF00, 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 0x        , 

-----------------------------------------------------------------
faire_un_test--Walsh 2D------------------------------------------
-------------Transformee inverse Wi calculee avec Fonction Walsh (decimal)

Matrice   8 par   8 : 
Transformee inverse Wi calculee avec Fonction Walsh (decimal): 
          1,           2,           3,           4,           5,           6,           7,           8, 
          9,          10,          11,          12,          13,          14,          15,          16, 
         17,          18,          19,          20,          21,          22,          23,          24, 
         25,          26,          27,          28,          29,          30,          31,          32, 
         33,          34,          35,          36,          37,          38,          39,          40, 
         41,          42,          43,          44,          45,          46,          47,          48, 
         49,          50,          51,          52,          53,          54,          55,          56, 
         57,          58,          59,          60,          61,          62,          63,          64, 

-----------------------------------------------------------------
faire_un_test--DCT  2D------------------------------------------
Matrice Format double   8 par   8 : 
-------------Tableau initial D (format flottant double)----------- 
    +1.00,     +2.00,     +3.00,     +4.00,     +5.00,     +6.00,     +7.00,     +8.00, 
    +9.00,    +10.00,    +11.00,    +12.00,    +13.00,    +14.00,    +15.00,    +16.00, 
   +17.00,    +18.00,    +19.00,    +20.00,    +21.00,    +22.00,    +23.00,    +24.00, 
   +25.00,    +26.00,    +27.00,    +28.00,    +29.00,    +30.00,    +31.00,    +32.00, 
   +33.00,    +34.00,    +35.00,    +36.00,    +37.00,    +38.00,    +39.00,    +40.00, 
   +41.00,    +42.00,    +43.00,    +44.00,    +45.00,    +46.00,    +47.00,    +48.00, 
   +49.00,    +50.00,    +51.00,    +52.00,    +53.00,    +54.00,    +55.00,    +56.00, 
   +57.00,    +58.00,    +59.00,    +60.00,    +61.00,    +62.00,    +63.00,    +64.00, 

-----------------------------------------------------------------
faire_un_test--DCT 2D------------------------------------------
Matrice Format double   8 par   8 : 
-------------Transformee S calculee avec Fonction DCT (double)----------- 
  +260.00,    -18.22,     -0.00,     -1.90,     +0.00,     -0.57,     -0.00,     -0.14, 
  -145.77,     -0.00,     +0.00,     -0.00,     -0.00,     +0.00,     +0.00,     -0.00, 
    -0.00,     -0.00,     -0.00,     -0.00,     +0.00,     +0.00,     +0.00,     +0.00, 
   -15.24,     +0.00,     +0.00,     -0.00,     -0.00,     +0.00,     +0.00,     -0.00, 
    -0.00,     +0.00,     +0.00,     +0.00,     -0.00,     +0.00,     +0.00,     -0.00, 
    -4.55,     +0.00,     +0.00,     -0.00,     +0.00,     -0.00,     +0.00,     -0.00, 
    -0.00,     +0.00,     -0.00,     +0.00,     -0.00,     +0.00,     +0.00,     +0.00, 
    -1.15,     -0.00,     +0.00,     -0.00,     +0.00,     -0.00,     +0.00,     -0.00, 

-----------------------------------------------------------------
faire_un_test--DCT 2D------------------------------------------
Matrice Format double   8 par   8 : 
-------------Transformee inverse Didbl calculee avec Fonction DCTi (double)--------- 
    +1.00,     +2.00,     +3.00,     +4.00,     +5.00,     +6.00,     +7.00,     +8.00, 
    +9.00,    +10.00,    +11.00,    +12.00,    +13.00,    +14.00,    +15.00,    +16.00, 
   +17.00,    +18.00,    +19.00,    +20.00,    +21.00,    +22.00,    +23.00,    +24.00, 
   +25.00,    +26.00,    +27.00,    +28.00,    +29.00,    +30.00,    +31.00,    +32.00, 
   +33.00,    +34.00,    +35.00,    +36.00,    +37.00,    +38.00,    +39.00,    +40.00, 
   +41.00,    +42.00,    +43.00,    +44.00,    +45.00,    +46.00,    +47.00,    +48.00, 
   +49.00,    +50.00,    +51.00,    +52.00,    +53.00,    +54.00,    +55.00,    +56.00, 
   +57.00,    +58.00,    +59.00,    +60.00,    +61.00,    +62.00,    +63.00,    +64.00, 

-----------------------------------------------------------------
 Iteration de N tests     ---------------------------------------
-----------------------------------------------------------------
Date courante: Thu May  5 16:16:17 2016

Evaluation iteree Walsh_2D_base &  inverse ...

Evaluation iteree DCT 2D & DCT 2D inverse ...


-----affiche_resultats-------Parametres--------------------------
 kr                =       03
 (n = 1 << kr)     =       08
 (nxn = 1 << 2*kr) =       64
 NwalMax           =    10000
 NdctMax           =    10000
 Tmax              =    1.000

-----affiche_resultats---------Legendes--------------------------
Algorithme,    version:  
Walsh_2D : Walsh_2D_base  directe et inverse algorithme de base
DCT      : DCT_2D_base    directe et inverse algorithme de base

-----affiche_resultats---------Mesures----------------------------
Date du test: Thu May  5 16:16:17 2016
 
Programme,    Algorithme,        version,   kr,    n,    N_iter,       T_N_iter,      N_iter/sec
perfWalshDCT,   Walsh_2D,  Walsh_2D_base,    3,    8,     10000,       0.560000,    17857.143 
perfWalshDCT,     DCT_2D,    DCT_2D_base,    3,    8,      1296,       1.000000,     1296.000 
